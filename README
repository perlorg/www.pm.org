Web:     http://www.pm.org
Support: support@pm.org

Version control: https://github.com/perlorg/www.pm.org/
Admin manual:    http://www.pm.org/faq/admin.html

Directory layout is as follows:
    bin/                      programs to build the site etc.
    lib/                      Template Toolkit templates
    src/                      actual text of the site
    www/                      output goes here
    perl_mongers.xml          PM group listing data to build corresponding pages from
    perl_mongers.dtd          definition for perl_mongers.xml format

You publish to the live site by changing the contents of this git repo:

  git@git.develooper.com:www.pm.org-live.git

via running the bin/xml program. e.g.:

  PM_ORG_WWW=/Users/jhannah/src/perlorg/www.pm.org-live perl bin/xml

And then pushing those changes to that git repository. A cronjob
is running every 15 minutes that flushes that git repo to www.pm.org.

"bin/xml" takes the source files from src/, applies any templates
(from lib/), and writes the output to the $PM_ORG_WWW directory
(or www/).

lib/layout is the template which is applied to every page.

Note: whenever you refer to a page on our site inside a template,
please use the following mechanism, which changes the link to a
relative one so that we can build the site anywhere we want:

  See [% link_to("foo.html", "the best foo") %].


social networks:
    <meetup>http://www.meetup.com/The-New-York-Perl-Meetup-Group/</meetup>
    <linkedin>http://www.linkedin.com/groups?gid=684</linkedin>
    <facebook>http://www.facebook.com/Israeli.Perl.Mongers</facebook>
    <twitter>https://twitter.com/perlweekly</twitter>


### Validating group URLs

```
./bin/list_groups.pl |
while read group url; do echo -n "$group "; GET -t10 -sd $url; done > /tmp/s
```

`GET` is from LWP.

Deactivate groups without working sites:

```
grep -v 200 /tmp/s | awk '{print $1}' | xargs -n1 bin/deactivate-only.pl
```

Get Last-Modified timestamps

```
./bin/list_groups.pl |
while read group url; do
  echo;
  echo -n "$group ";
  GET -t10  -se $url | grep -i last-modified | cut -d: -f2-;
done | tee /tmp/stamps
```
